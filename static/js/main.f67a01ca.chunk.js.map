{"version":3,"sources":["utility.js","components/Accordion.js","components/ReplyList.js","components/CommentList.js","components/VideoElement.js","components/VideoList.js","components/PageNumbers.js","components/FooterCustom.js","App.js","reportWebVitals.js","index.js"],"names":["addCommasToNumber","num","toString","isNaN","parseInt","length","replace","Accordion","props","useState","isActive","setIsActive","panelRef","useRef","useEffect","current","style","maxHeight","scrollHeight","className","onClick","title","ref","children","Reply","parse","reply","author","likes","ReplyList","replyComponentArr","replies","forEach","replyObj","index","push","authorName","likeCount","Comment","comment","replyCount","CommentList","commentComponentArr","comments","commentObj","topLevelComment","VideoElement","href","videoObj","videoId","target","rel","srcSet","thumbnailKeys","Object","keys","thumbnails","i","url","width","createSrcSet","sizes","src","default","height","alt","description","split","viewCount","dislikes","dislikeCount","toFixed","totalComments","totalCommentLikes","totalCommentReplies","VideoList","start","currPage","resultsPerPage","end","Math","min","videoList","displayedVideoElements","PageNumbers","getNumDisplayedButtons","numDisplayedButtons","setNumDisplayedButtons","window","matchMedia","matches","goToPage","scrollToTop","document","getElementById","scrollIntoView","behavior","setCurrPage","getLastPageNum","ceil","maxResults","getMiddleButton","debouncedHandleResize","func","delay","debounceTimer","clearTimeout","setTimeout","apply","arguments","debounce","console","log","newValue","addEventListener","removeEventListener","pageButtonContainerTemplate","disabled","type","value","numberedPageButtons","totalPages","middleButtonNum","createNumberedPageButtons","FooterCustom","id","currentYear","Date","getFullYear","getCopyrightString","App","displayedChannels","setDisplayedChannels","videoData","setVideoData","setVideoList","getPromiseFromFetchOfJSON","fetch","headers","then","response","json","gmm","gmmore","promiseArr","Promise","all","dataArr","prevVideoData","newVideoData","newVideoList","concat","sort","first","second","createVideoList","e","preventDefault","hidden","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f67a01ca.chunk.js","sourcesContent":["export function addCommasToNumber(num) {\r\n    // If typeof num is number, convert to string\r\n    if (typeof num === 'number')\r\n        num = num.toString();\r\n    // If num is string and string contains number and more than 3 digits\r\n    if (typeof num === 'string' &&\r\n        !isNaN(parseInt(num, 10)) &&\r\n        num.length > 3\r\n    ) {\r\n        // Add comma after every 3rd index from end\r\n        return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else // Else return the num as is\r\n        return num;\r\n}\r\n\r\nexport function debounce(func, delay) {\r\n    let debounceTimer;\r\n    return function () {\r\n        clearTimeout(debounceTimer);\r\n        debounceTimer = setTimeout(() => func.apply(this, arguments), delay);\r\n    };\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport './Accordion.css';\r\n\r\nfunction Accordion(props) {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const panelRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        panelRef.current.style.maxHeight =\r\n            isActive ?\r\n                panelRef.current.scrollHeight + \"px\" :\r\n                null;\r\n    }, [isActive]);\r\n\r\n    return (\r\n        <div className=\"accordion-container\">\r\n            <button\r\n                className={\"accordion\" + (isActive ? \" active\" : \"\")}\r\n                onClick={() => setIsActive(!isActive)}\r\n            >\r\n                {props.title}\r\n            </button>\r\n            <div\r\n                className=\"panel\"\r\n                ref={panelRef}\r\n            >\r\n                {isActive ? props.children : \"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accordion;","import React from 'react';\r\nimport parse from 'html-react-parser';\r\nimport Accordion from './Accordion.js';\r\nimport { addCommasToNumber } from '../utility.js';\r\n\r\nfunction Reply(props) {\r\n    return (\r\n        <li className=\"reply-container\">\r\n            <div className=\"reply\">{parse(props.reply)}</div>\r\n            <div className=\"reply-author\">{`Author: ${props.author}`}</div>\r\n            <div className=\"reply-likes\">{`Likes: ${addCommasToNumber(props.likes)}`}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction ReplyList(props) {\r\n    let replyComponentArr = [];\r\n    if (props.replies.length) {\r\n        props.replies.forEach((replyObj, index) => {\r\n            replyComponentArr.push(\r\n                <Reply\r\n                    key={index}\r\n                    reply={replyObj.reply}\r\n                    author={replyObj.authorName}\r\n                    likes={replyObj.likeCount}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reply-list-container\">\r\n            <Accordion title=\"Top Stevie Replies:\">\r\n                <ol>{replyComponentArr}</ol>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReplyList;","import React from 'react';\r\nimport parse from 'html-react-parser';\r\nimport Accordion from './Accordion.js';\r\nimport { addCommasToNumber } from '../utility.js';\r\nimport ReplyList from './ReplyList.js';\r\n\r\nfunction Comment(props) {\r\n    return (\r\n        <li className=\"comment-container\">\r\n            <div className=\"comment\">{parse(props.comment)}</div>\r\n            <div className=\"comment-author\">{`Author: ${props.author}`}</div>\r\n            <div className=\"comment-likes\">{`Likes: ${addCommasToNumber(props.likes)}`}</div>\r\n            <div className=\"comment-replies\">{`Replies: ${addCommasToNumber(props.replyCount)}`}</div>\r\n            {(props.replies.length) ? <ReplyList replies={props.replies} /> : null}\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction CommentList(props) {\r\n    let commentComponentArr = [];\r\n    if (props.comments.length) {\r\n        props.comments.forEach((commentObj, index) => {\r\n            commentComponentArr.push(\r\n                <Comment\r\n                    key={index}\r\n                    comment={commentObj.topLevelComment}\r\n                    author={commentObj.authorName}\r\n                    likes={commentObj.likeCount}\r\n                    replyCount={commentObj.replyCount}\r\n                    replies={commentObj.replies}\r\n\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment-list-container\">\r\n            <Accordion title=\"Top Stevie Comments:\">\r\n                <ol>{commentComponentArr}</ol>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentList;","import React from 'react';\r\nimport { addCommasToNumber } from '../utility.js';\r\nimport './VideoElement.css';\r\nimport CommentList from './CommentList.js';\r\n\r\nfunction VideoElement(props) {\r\n    function createSrcSet() {\r\n        let srcSet = \"\";\r\n        const thumbnailKeys = Object.keys(props.videoObj.thumbnails);\r\n        for (let i = 0; i < thumbnailKeys.length; i++) {\r\n            srcSet += `${props.videoObj.thumbnails[thumbnailKeys[i]].url} ${props.videoObj.thumbnails[thumbnailKeys[i]].width}w`;\r\n            if (i < thumbnailKeys.length - 1)\r\n                srcSet += \", \";\r\n        }\r\n        return srcSet;\r\n    }\r\n\r\n    function getLikePercentage(likes, dislikes) {\r\n        return ( (likes / (likes + dislikes)) * 100 ).toFixed(1);\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"video-data-container\">\r\n                <div className=\"thumbnail-container\">\r\n                    <a href={\"https://www.youtube.com/watch?v=\" + props.videoObj.videoId}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <img\r\n                            srcSet={createSrcSet()}\r\n                            sizes=\"50vw\"\r\n                            src={props.videoObj.thumbnails.default.url}\r\n                            width={props.videoObj.thumbnails.default.width}\r\n                            height={props.videoObj.thumbnails.default.height}\r\n                            alt={`YouTube thumbnail for video ID: ${props.videoObj.videoId}`}\r\n                        />\r\n                    </a>\r\n                </div>\r\n                <h2 className=\"title\">{props.videoObj.title}</h2>\r\n                <p className=\"description\">{props.videoObj.description.split(\"\\n\")[0]}</p>\r\n                <div className=\"video-data\">\r\n                    <div className=\"video-views\">{`Views: ${addCommasToNumber(props.videoObj.viewCount)}`}</div>\r\n                    <div className=\"video-likes\">\r\n                        {`Likes: ${addCommasToNumber(props.videoObj.likeCount)} (${getLikePercentage(props.videoObj.likeCount, props.videoObj.dislikeCount)}%)`}\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"comments-data\">\r\n                    <div className=\"total-comments\">{`Total Stevie Comments: ${addCommasToNumber(props.videoObj.totalComments)}`}</div>\r\n                    <div className=\"total-likes\">{`Total Likes: ${addCommasToNumber(props.videoObj.totalCommentLikes)}`}</div>\r\n                    <div className=\"total-replies\">{`Total Replies: ${addCommasToNumber(props.videoObj.totalCommentReplies)}`}</div>\r\n                </div>\r\n            </div>\r\n            <CommentList comments={props.videoObj.comments} />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default VideoElement;","import React from 'react';\r\nimport VideoElement from './VideoElement.js';\r\nimport './VideoList.css';\r\n\r\nfunction VideoList(props) {\r\n    // Start and end index of videoList to display\r\n    const start = (props.currPage - 1) * props.resultsPerPage;\r\n    const end = Math.min(start + props.resultsPerPage, props.videoList.length);\r\n    let displayedVideoElements = [];\r\n    for (let i = start; i < end; i++) {\r\n        displayedVideoElements.push(\r\n            <VideoElement\r\n                key={i}\r\n                videoObj={props.videoList[i]}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ol\r\n            className=\"video-list\"\r\n            start={start + 1}\r\n        >\r\n            {displayedVideoElements}\r\n        </ol>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import React, { useState, useEffect } from 'react';\r\nimport './PageNumbers.css';\r\nimport { debounce } from '../utility.js';\r\n\r\nfunction PageNumbers(props) {\r\n    const [numDisplayedButtons, setNumDisplayedButtons] = useState(getNumDisplayedButtons());\r\n\r\n    /** Returns number of numbered buttons to display depending on window width. */\r\n    function getNumDisplayedButtons() {\r\n        if (window.matchMedia(\"(max-width: 480px)\").matches)\r\n            return 3;\r\n        else if (window.matchMedia(\"(max-width: 750px)\").matches)\r\n            return 5;\r\n        else\r\n            return 7;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            console.log(\"Change numDisplayedButtons\");\r\n            const newValue = getNumDisplayedButtons();\r\n            if (newValue !== numDisplayedButtons)\r\n                setNumDisplayedButtons(newValue);\r\n        }, 1000);\r\n\r\n        window.addEventListener('resize', debouncedHandleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', debouncedHandleResize);\r\n        };\r\n    });\r\n\r\n    function goToPage(num) {\r\n        if (props.scrollToTop)\r\n            document.getElementById('top-page').scrollIntoView({ behavior: \"smooth\" });\r\n        props.setCurrPage(num);\r\n    }\r\n\r\n    function goPrevPage() {\n        // Return if currPage is 1\r\n        if (props.currPage === 1)\r\n            return;\r\n\r\n        goToPage(props.currPage - 1);\r\n    }\n\n    function goNextPage() {\n        // Return if currPage is last page\r\n        if (props.currPage === getLastPageNum())\r\n            return;\r\n\r\n        goToPage(props.currPage + 1);\r\n    }\n\n    function getLastPageNum() {\n        return Math.ceil(props.maxResults / props.resultsPerPage);\r\n    }\r\n\r\n    function getMiddleButton() {\r\n        return Math.ceil(numDisplayedButtons / 2);\r\n    }\r\n\r\n    function createNumberedPageButtons() {\r\n        let numberedPageButtons = [];\r\n        const totalPages = getLastPageNum();\r\n        const middleButtonNum = getMiddleButton();\r\n        let start, end;\r\n        // If totalPages is more than numDisplayedButtons\r\n        if (totalPages > numDisplayedButtons) {\r\n            if (props.currPage > totalPages - middleButtonNum) {\r\n                // Show last numDisplayedButtons\r\n                start = totalPages - numDisplayedButtons + 1;\r\n                end = totalPages;\r\n            } else if (props.currPage > middleButtonNum) {\r\n                // Show buttons with current page in middle\r\n                start = props.currPage - middleButtonNum + 1;\r\n                end = props.currPage + middleButtonNum - 1;\r\n            } else {\r\n                // Show first numDisplayedButtons\r\n                start = 1;\r\n                end = numDisplayedButtons;\r\n            }\r\n        } else { // Else totalPages is less than or equal to numDisplayedButtons\r\n            // Add buttons ranging from 1 to totalPages\r\n            start = 1;\r\n            end = totalPages;\r\n        }\r\n\r\n        for (let i = start; i <= end; i++) {\r\n            numberedPageButtons.push(\r\n                <button\r\n                    key={i}\r\n                    className={\"custom-button\" + (i === props.currPage ? \" active\" : \"\")}\r\n                    onClick={() => goToPage(i)}\r\n                >\r\n                    {i}\r\n                </button>\r\n            );\r\n        }\r\n        return numberedPageButtons;\r\n    }\r\n\r\n    const pageButtonContainerTemplate = (\r\n        <div className=\"page-button-container\">\r\n            <button\r\n                className=\"custom-button\"\r\n                onClick={goPrevPage}\r\n                // Disable 'PREV' if current page is equal to 1\r\n                disabled={props.currPage === 1}\r\n                type=\"button\"\r\n                value=\"prev\"\r\n            >\r\n                PREV\r\n            </button>\r\n            <button\r\n                className=\"custom-button\"\r\n                onClick={() => goToPage(1)}\r\n                // Disable 'FIRST' if last page is less than or equal to numDisplayedButtons\r\n                // OR current page is near beginning of list\r\n                disabled={\r\n                    getLastPageNum() <= numDisplayedButtons ||\r\n                    props.currPage <= getMiddleButton()\r\n                }\r\n                type=\"button\"\r\n                value=\"first\"\r\n            >\r\n                FIRST\r\n            </button>\r\n            <div className=\"page-number-container\">\r\n                {createNumberedPageButtons()}\r\n            </div>\r\n            <button\r\n                className=\"custom-button\"\r\n                onClick={() => goToPage(getLastPageNum())}\r\n                // Disable 'LAST' if last page is less than or equal to numDisplayedButtons\r\n                // OR current page is near end of list\r\n                disabled={\r\n                    getLastPageNum() <= numDisplayedButtons ||\r\n                    props.currPage >= getLastPageNum() - getMiddleButton() + 1\r\n                }\r\n                type=\"button\"\r\n                value=\"last\"\r\n            >\r\n                LAST\r\n            </button>\r\n            <button\r\n                className=\"custom-button\"\r\n                onClick={goNextPage}\r\n                // Disable 'NEXT' if current page is equal to last page\r\n                disabled={props.currPage === getLastPageNum()}\r\n                type=\"button\"\r\n                value=\"next\"\r\n            >\r\n                NEXT\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (props.maxResults ? pageButtonContainerTemplate : null);\r\n}\r\n\r\nexport default PageNumbers;","import React from 'react';\r\nimport './FooterCustom.css';\r\n\r\nfunction FooterCustom() {\r\n    function getCopyrightString() {\r\n        const currentYear = new Date().getFullYear();\r\n        return currentYear === 2021\r\n            ? 2021\r\n            : `2021-${currentYear}`;\r\n    }\r\n\r\n    return (\r\n        <footer className=\"App-footer\">\r\n            <p>\r\n                <small>\r\n                    Source Code &copy; <time id=\"copyright-current-year\">{getCopyrightString()}</time> Todd Brentlinger, Santa Cruz, CA, USA. All Rights Reserved.\r\n            </small>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default FooterCustom;","import React, { useState, useEffect } from 'react';\r\n//import axios from 'axios';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport VideoList from './components/VideoList.js';\r\nimport PageNumbers from './components/PageNumbers.js';\r\nimport FooterCustom from './components/FooterCustom.js';\r\n/*\r\nconst initialState = {\r\n    'display': { 'gmm': false, 'gmmore': false },\r\n    'data': { 'gmm': [], 'gmmore': [] }\r\n};\r\n\r\nfunction getPromiseFromFetchOfJSON(url) {\r\n    return fetch(url,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n    ).then((response) => response.json());\r\n}\r\n\r\nasync function reducer(state, action) {\r\n    console.log('reducer started');\r\n    console.log('state:');\r\n    console.log(state);\r\n    console.log(`action: ${action}`);\r\n    let newState;\r\n    switch (action) {\r\n        case 'gmm':\r\n            // Check if need to fetch\r\n            if (!state.data.gmm.length) {\r\n                await getPromiseFromFetchOfJSON(\r\n                    './data/gmmStevieVideoListSorted.json'\r\n                ).then(function (data) {\r\n                    console.log(\"Get GMM videos\");\r\n                    newState = {\r\n                        'display': { 'gmm': true, 'gmmore': false },\r\n                        'data': { 'gmm': data, 'gmmore': state.data.gmmore }\r\n                    };\r\n                });\r\n            } else {\r\n                newState = {\r\n                    'display': { 'gmm': true, 'gmmore': false },\r\n                    'data': state.data\r\n                };\r\n            }\r\n            break;\r\n\r\n        case 'gmmore':\r\n            // Check if need to fetch\r\n            if (!state.data.gmmore.length) {\r\n                await getPromiseFromFetchOfJSON(\r\n                    './data/gmMoreStevieVideoListSorted.json'\r\n                ).then(function (data) {\r\n                    console.log(\"Get GMMore videos\");\r\n                    newState = {\r\n                        'display': { 'gmm': false, 'gmmore': true },\r\n                        'data': { 'gmm': state.data.gmm, 'gmmore': data }\r\n                    };\r\n                });\r\n            } else {\r\n                newState = {\r\n                    'display': { 'gmm': false, 'gmmore': true },\r\n                    'data': state.data\r\n                };\r\n            }\r\n            break;\r\n\r\n        case 'both':\r\n            // Check if need to fetch\r\n            if (!state.data.gmm.length || !state.data.gmmore.length) {\r\n                let promiseArr = [];\r\n                if (!state.data.gmm.length) {\r\n                    promiseArr.push(\r\n                        await getPromiseFromFetchOfJSON('./data/gmmStevieVideoListSorted.json')\r\n                    );\r\n                } else {\r\n                    promiseArr.push(null);\r\n                }\r\n                if (!state.data.gmmore.length) {\r\n                    promiseArr.push(\r\n                        await getPromiseFromFetchOfJSON('./data/gmMoreStevieVideoListSorted.json')\r\n                    );\r\n                } else {\r\n                    promiseArr.push(null);\r\n                }\r\n                Promise.all(promiseArr).then(dataArr => {\r\n                    let newDataObj;\r\n                    // If GMM & GMMore data is fetched\r\n                    if (dataArr[0] && dataArr[1]) {\r\n                        newDataObj = { 'gmm': dataArr[0], 'gmmore': dataArr[1] };\r\n                    }\r\n                    // Else If only GMM data is fetched\r\n                    else if (dataArr[0]) {\r\n                        newDataObj = { ...state.data, 'gmm': dataArr[0] };\r\n                    }\r\n                    // Else If only GMMore data is fetched\r\n                    else if (dataArr[1]) {\r\n                        newDataObj = { ...state.data, 'gmmore': dataArr[1] };\r\n                    }\r\n                    else {\r\n                        newDataObj = { ...state.data };\r\n                    }\r\n                    newState = {\r\n                        'display': { 'gmm': true, 'gmmore': true },\r\n                        'data': newDataObj\r\n                    };\r\n                });\r\n            } else {\r\n                newState = {\r\n                    'display': { 'gmm': true, 'gmmore': true },\r\n                    'data': state.data\r\n                };\r\n            }\r\n            break;\r\n\r\n        default:\r\n            newState = state;\r\n    }\r\n    console.log('newState:');\r\n    console.log(newState);\r\n    return newState;\r\n}\r\n*/\r\nfunction App() {\r\n    const [displayedChannels, setDisplayedChannels] = useState({\r\n        'gmm': true,\r\n        'gmmore': false,\r\n    });\r\n    const [videoData, setVideoData] = useState({\r\n        'gmm': [],\r\n        'gmmore': [],\r\n    });\r\n    //const [dataState, dataDispatch] = useReducer(reducer, initialState);\r\n    const [videoList, setVideoList] = useState([]);\r\n    const [currPage, setCurrPage] = useState(1);\r\n    const [resultsPerPage, setResultsPerPage] = useState(10);\r\n\r\n    function getPromiseFromFetchOfJSON(url) {\r\n        return fetch(url,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        ).then((response) => response.json());\r\n    }\r\n\r\n    function getVideoData() {\r\n        console.log(\r\n            'getVideoData has started\\n',\r\n            'Initial State Values:\\n',\r\n            `displayedChannels: { gmm: ${displayedChannels.gmm} gmmore: ${displayedChannels.gmmore} }\\n`,\r\n            `videoData: { gmm: ${videoData.gmm.length} gmmore: ${videoData.gmmore.length} }`\r\n        );\r\n        let promiseArr = [];\r\n        if (displayedChannels.gmm && !videoData.gmm.length) {\r\n            promiseArr.push(\r\n                getPromiseFromFetchOfJSON('./data/gmmStevieVideoListSorted.json')\r\n            );\r\n        } else {\r\n            promiseArr.push(null);\r\n        }\r\n        if (displayedChannels.gmmore && !videoData.gmmore.length) {\r\n            promiseArr.push(\r\n                getPromiseFromFetchOfJSON('./data/gmMoreStevieVideoListSorted.json')\r\n            );\r\n        } else {\r\n            promiseArr.push(null);\r\n        }\r\n        Promise.all(promiseArr).then(dataArr => {\r\n            setVideoData(prevVideoData => {\r\n                const newVideoData = {\r\n                    'gmm': dataArr[0] ? dataArr[0] : prevVideoData.gmm,\r\n                    'gmmore': dataArr[1] ? dataArr[1] : prevVideoData.gmmore,\r\n                };\r\n                console.log('Promise.all inside getVideoData has ended');\r\n                createVideoList(newVideoData);\r\n                return newVideoData;\r\n            });\r\n        });\r\n\r\n        /*\r\n        // Good Mythical Morning\r\n        if (displayedChannels.gmm && !videoData.gmm.length) {\r\n            \r\n            //axios.get('./data/gmmeStevieVideoListSorted.json')\r\n            //    .then(response => {\r\n            //        console.log(\"Get GMM videos\");\r\n            //        console.log(response.data);\r\n            //    });\r\n            \r\n            fetch('./data/gmmStevieVideoListSorted.json',\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            ).then(function (response) {\r\n                return response.json();\r\n            }).then(function (data) {\r\n                console.log(\"Get GMM videos\");\r\n                setVideoData({\r\n                    ...videoData,\r\n                    'gmm': data,\r\n                });\r\n            });\r\n        }\r\n\r\n        // Good Mythical More\r\n        if (displayedChannels.gmmore && !videoData.gmmore.length) {\r\n            let requestURL = './data/gmMoreStevieVideoListSorted.json';\r\n            let request = new XMLHttpRequest();\r\n            request.open('GET', requestURL);\r\n\r\n            //request.responseType = 'json';\r\n            request.onreadystatechange = function () {\r\n                // In local files, status is 0 upon success in Mozilla Firefox\r\n                if (request.readyState === XMLHttpRequest.DONE) {\r\n                    const status = request.status;\r\n                    if (status === 0 || (status >= 200 && status < 400)) {\r\n                        // The request has been completed successfully\r\n                        console.log(\"Get GMMore videos\");\r\n                        //console.log(\"Success\");\r\n                        setVideoData({\r\n                            ...videoData,\r\n                            'gmmore': JSON.parse(request.responseText),\r\n                        });\r\n                    } else {\r\n                        // Oh no! There has been an error with the request!\r\n                        console.log(\"Get GMMore videos\");\r\n                        console.log(\"Failure\");\r\n                    }\r\n                }\r\n            };\r\n            request.send();\r\n        }\r\n        */\r\n    }\r\n\r\n    function createVideoList(newVideoData) {\r\n        console.log(\r\n            'createVideoList() has started\\n',\r\n            'Parameter:\\n',\r\n            `newVideoData: { gmm: ${newVideoData.gmm.length} gmmore: ${newVideoData.gmmore.length} }\\n`,\r\n            'Initial State Values:\\n',\r\n            `displayedChannels: { gmm: ${displayedChannels.gmm} gmmore: ${displayedChannels.gmmore} }\\n`,\r\n            `videoData: { gmm: ${videoData.gmm.length} gmmore: ${videoData.gmmore.length} }`\r\n        );\r\n        let newVideoList = [];\r\n        if (displayedChannels.gmm)\r\n            newVideoList = newVideoList.concat(newVideoData.gmm);\r\n        if (displayedChannels.gmmore)\r\n            newVideoList = newVideoList.concat(newVideoData.gmmore);\r\n        newVideoList.sort((first, second) => {\r\n            // If comments are equal, sort by likes\r\n            return (first.totalComments === second.totalComments)\r\n                ? second.totalCommentLikes - first.totalCommentLikes\r\n                : second.totalComments - first.totalComments;\r\n        });\r\n        setVideoList(newVideoList);\r\n        console.log('createVideoList() has ended');\r\n        //return newVideoList;\r\n    }\r\n    /*\r\n    // TODO: Convert to videoList useState and/or useEffect that only changes\r\n    // when displayedChannels changes or videoData changes\r\n    // ISSUE: Runs with each page change\r\n    function createVideoListOld() {\r\n        console.log('createVideoList() has started');\r\n        console.log('Initial State Values:');\r\n        console.log(`displayedChannels: { gmm: ${displayedChannels.gmm} gmmore: ${displayedChannels.gmmore} }`);\r\n        console.log(`videoData: { gmm: ${videoData.gmm.length} gmmore: ${videoData.gmmore.length} }`);\r\n        let newVideoList = [];\r\n        if (displayedChannels.gmm)\r\n            newVideoList = newVideoList.concat(videoData.gmm);\r\n        if (displayedChannels.gmmore)\r\n            newVideoList = newVideoList.concat(videoData.gmmore);\r\n        newVideoList.sort((first, second) => {\r\n            // If comments are equal, sort by likes\r\n            return (first.totalComments === second.totalComments)\r\n                ? second.totalCommentLikes - first.totalCommentLikes\r\n                : second.totalComments - first.totalComments;\r\n        });\r\n        setVideoList(newVideoList);\r\n        console.log('createVideoList() has ended');\r\n        //return newVideoList;\r\n    }\r\n    */\r\n\r\n    //const videoList = createVideoList();\r\n    useEffect(getVideoData, [displayedChannels]);\r\n    //useEffect(createVideoList, [displayedChannels]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header\r\n                id=\"top-page\"\r\n                className=\"App-header\"\r\n            >\r\n                GMM Stevie Top Videos\r\n            </header>\r\n            <div id=\"channel-select-btn-container\">\r\n                <button\r\n                    className={\"custom-button\" + (displayedChannels.gmm && !displayedChannels.gmmore ? \" active\" : \"\")}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setDisplayedChannels({\r\n                            'gmm': true,\r\n                            'gmmore': false,\r\n                        });\r\n                        setCurrPage(1);\r\n                    }}\r\n                >GMM</button>\r\n                <button\r\n                    className={\"custom-button\" + (!displayedChannels.gmm && displayedChannels.gmmore ? \" active\" : \"\")}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setDisplayedChannels({\r\n                            'gmm': false,\r\n                            'gmmore': true,\r\n                        });\r\n                        setCurrPage(1);\r\n                    }}\r\n                >GMMore</button>\r\n                <button\r\n                    className={\"custom-button\" + (displayedChannels.gmm && displayedChannels.gmmore ? \" active\" : \"\")}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setDisplayedChannels({\r\n                            'gmm': true,\r\n                            'gmmore': true,\r\n                        });\r\n                        setCurrPage(1);\r\n                    }}\r\n                >Both</button>\r\n            </div>\r\n            <div hidden={true}>\r\n                <div>GMM Displayed: {displayedChannels.gmm ? \"TRUE\" : \"FALSE\"}</div>\r\n                <div>GMM Videos Saved: {videoData ? videoData.gmm.length : videoData}</div>\r\n                <div>GMMore Displayed: {displayedChannels.gmmore ? \"TRUE\" : \"FALSE\"}</div>\r\n                <div>GMMore Videos Saved: {videoData ? videoData.gmmore.length : videoData}</div>\r\n            </div>\r\n            <PageNumbers\r\n                currPage={currPage}\r\n                resultsPerPage={resultsPerPage}\r\n                setCurrPage={setCurrPage}\r\n                maxResults={videoList.length} //props.videoList.length\r\n            />\r\n            <VideoList\r\n                videoList={videoList} //props.videoList\r\n                currPage={currPage}\r\n                resultsPerPage={resultsPerPage}\r\n            />\r\n            <PageNumbers\r\n                currPage={currPage}\r\n                resultsPerPage={resultsPerPage}\r\n                setCurrPage={setCurrPage}\r\n                maxResults={videoList.length} //props.videoList.length\r\n                scrollToTop={true}\r\n            />\r\n            <FooterCustom />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import stevieVideoArr from './data/gmmStevieVideoListSorted.json';\n\n// ---------- Sort video list ----------\n/*\nstevieVideoArr.sort((first, second) => {\r\n    // If comments are equal, sort by likes\r\n    return (first.totalComments === second.totalComments)\r\n        ? second.totalCommentLikes - first.totalCommentLikes\r\n        : second.totalComments - first.totalComments;\r\n});\n*/\n\n// ---------- React Render ----------\n\nReactDOM.render(\n    <React.StrictMode>\n        <App\n            //videoList={stevieVideoArr}\n        />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}